package controllers

import (
	// "fmt"
	"github.com/astaxie/beego"
	"github.com/astaxie/beego/orm"
	m "github.com/xulei8/daqid/models"
	"strings"
	  "github.com/xulei8/daqid/utils"	
)

var o orm.Ormer


type baseRouter struct {
	beego.Controller
 	
	isLogin bool
}


type CrmAdmin struct {
	//beego.Controller
	object m.DqContact
	baseRouter
}

func (this *baseRouter) SetPaginator(per int, nums int64) *utils.Paginator {
	p := utils.NewPaginator(this.Ctx.Request, per, nums)
	this.Data["paginator"] = p
	return p
}

type CrmImport struct {
	beego.Controller
}
func (this *CrmAdmin) Object() interface{} {
        return &this.object
}

func (this *CrmAdmin) Get() {
	this.Data["Website"] = "beego.me"
	this.Data["Email"] = "astaxie@gmail.com"
 	 var articles []m.DqContact
  

 	o := orm.NewOrm()
   
        qs := o.QueryTable( "dq_contact").OrderBy("-id")
	//fmt.Println("%q",qs)
        if err := this.SetObjects(qs, &articles); err != nil {
                this.Data["Error"] = err
                beego.Error(err)
       }
 
	this.TplNames = "admin.tpl"
}


func (this *CrmAdmin) SetObjects(qs orm.QuerySeter, objects interface{}) error {
        cnt, err := qs.Count()
//fmt.Println("Count %d",cnt)
        if err != nil {
                return err
        }
        // create paginator
      _ := this.SetPaginator(10, cnt)
       if cnt, err := qs.RelatedSel(10, 20).All(objects); err != nil {
               return err
        } else {
                this.Data["Objects"] = objects
                this.Data["ObjectsCnt"] = cnt
 	 
       }
        return nil
}

func (this *CrmImport) Get() {
	this.Data["Website"] = "beego.me"
	this.Data["Email"] = "astaxie@gmail.com"
	this.TplNames = "import.tpl"
}

// 导入数据
func (this *CrmImport) Post() {
	nums := this.GetString("nums")
	line := strings.Split(nums, "\n")
	l := len(line)
	i := 0

	o = orm.NewOrm()
	for i = 0; i < l; i++ {
	
		
		a := strings.Trim(line[i], "\n")
		b := strings.Trim(a, " ")
	if len(b)>3 {
u := new(m.DqContact)
		u.Mname = b
		u.Uname = b
		u.Tel = b
		//fmt.Println("line " + ":" + b)
		//m.AddDqContact(u)
		//o = orm.NewOrm()

		o.Insert(u)
	}
	}

	this.Data["Website"] = "beego.me"
	this.Data["Email"] = "astaxie@gmail.com"
	this.TplNames = "import.tpl"
}
